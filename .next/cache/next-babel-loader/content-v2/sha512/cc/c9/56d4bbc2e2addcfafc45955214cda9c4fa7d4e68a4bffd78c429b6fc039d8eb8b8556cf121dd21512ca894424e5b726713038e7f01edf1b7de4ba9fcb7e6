{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/tr3ch/Desktop/WORKSPACE/Next/authentication/pages/auth.js\";\nimport { useRouter } from 'next/router';\nimport { getSession, useSession } from 'next-auth/client';\nimport { useEffect } from 'react';\nimport AuthForm from '../components/auth/auth-form';\n\nfunction AuthPage() {\n  const [isLoading, setIsLoading] = useState(true);\n  const router = useRouter();\n  useEffect(() => {\n    getSession.then(session => {\n      if (session) {\n        router.replace('/');\n      } else {\n        setIsLoading(false);\n      }\n    });\n  }, [router]);\n  return /*#__PURE__*/_jsxDEV(AuthForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n}\n\nexport default AuthPage;","map":{"version":3,"sources":["/home/tr3ch/Desktop/WORKSPACE/Next/authentication/pages/auth.js"],"names":["useRouter","getSession","useSession","useEffect","AuthForm","AuthPage","isLoading","setIsLoading","useState","router","then","session","replace"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,kBAAvC;AACA,SAASC,SAAT,QAA0B,OAA1B;AAEA,OAAOC,QAAP,MAAqB,8BAArB;;AAEA,SAASC,QAAT,GAAoB;AAClB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BC,QAAQ,CAAC,IAAD,CAA1C;AAEA,QAAMC,MAAM,GAAGT,SAAS,EAAxB;AACAG,EAAAA,SAAS,CAAC,MAAM;AACdF,IAAAA,UAAU,CAACS,IAAX,CAAiBC,OAAD,IAAa;AAC3B,UAAIA,OAAJ,EAAa;AACXF,QAAAA,MAAM,CAACG,OAAP,CAAe,GAAf;AACD,OAFD,MAEO;AACLL,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,KAND;AAOD,GARQ,EAQN,CAACE,MAAD,CARM,CAAT;AAYA,sBAAO,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,eAAeJ,QAAf","sourcesContent":["import { useRouter } from 'next/router';\nimport { getSession, useSession } from 'next-auth/client';\nimport { useEffect } from 'react';\n\nimport AuthForm from '../components/auth/auth-form';\n\nfunction AuthPage() {\n  const [isLoading, setIsLoading] = useState(true);\n\n  const router = useRouter();\n  useEffect(() => {\n    getSession.then((session) => {\n      if (session) {\n        router.replace('/');\n      } else {\n        setIsLoading(false)\n      }\n    });\n  }, [router]);\n\n  \n\n  return <AuthForm />;\n}\n\nexport default AuthPage;\n"]},"metadata":{},"sourceType":"module"}