{"ast":null,"code":"import NextAuth from 'next-auth';\nimport Providers from 'next-auth/providers';\nimport { verifyPassword } from '../../../lib/auth';\nimport { connectToDatabase } from '../../../lib/db';\nexport default NextAuth({\n  session: {\n    jwt: true\n  },\n  providers: [Providers.Credentials({\n    async authorize(credentials) {\n      const client = await connectToDatabase();\n      const usersCollection = client.db().collection('users');\n      const user = await usersCollection.findOne({\n        email: credentials.email\n      });\n\n      if (!user) {\n        client.close();\n        throw new Error('No user found!');\n      }\n\n      const isValid = verifyPassword(credentials.password, user.password);\n\n      if (!isValid) {\n        client.close();\n        throw new Error('Could not log you in!');\n      }\n\n      client.close();\n      return {\n        email: user.email\n      };\n    }\n\n  })]\n});","map":{"version":3,"sources":["/home/tr3ch/Desktop/WORKSPACE/Next/authentication/pages/api/auth/[...nextauth].js"],"names":["NextAuth","Providers","verifyPassword","connectToDatabase","session","jwt","providers","Credentials","authorize","credentials","client","usersCollection","db","collection","user","findOne","email","close","Error","isValid","password"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,WAArB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,SAASC,iBAAT,QAAkC,iBAAlC;AAEA,eAAeH,QAAQ,CAAC;AACtBI,EAAAA,OAAO,EAAE;AACPC,IAAAA,GAAG,EAAE;AADE,GADa;AAKtBC,EAAAA,SAAS,EAAE,CACTL,SAAS,CAACM,WAAV,CAAsB;AACpB,UAAMC,SAAN,CAAgBC,WAAhB,EAA6B;AAC3B,YAAMC,MAAM,GAAG,MAAMP,iBAAiB,EAAtC;AAEA,YAAMQ,eAAe,GAAGD,MAAM,CAACE,EAAP,GAAYC,UAAZ,CAAuB,OAAvB,CAAxB;AACA,YAAMC,IAAI,GAAG,MAAMH,eAAe,CAACI,OAAhB,CAAwB;AACzCC,QAAAA,KAAK,EAAEP,WAAW,CAACO;AADsB,OAAxB,CAAnB;;AAIA,UAAI,CAACF,IAAL,EAAW;AACTJ,QAAAA,MAAM,CAACO,KAAP;AACA,cAAM,IAAIC,KAAJ,CAAU,gBAAV,CAAN;AACD;;AAED,YAAMC,OAAO,GAAGjB,cAAc,CAACO,WAAW,CAACW,QAAb,EAAuBN,IAAI,CAACM,QAA5B,CAA9B;;AAEA,UAAI,CAACD,OAAL,EAAc;AACZT,QAAAA,MAAM,CAACO,KAAP;AACA,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD;;AAEDR,MAAAA,MAAM,CAACO,KAAP;AACA,aAAO;AAAED,QAAAA,KAAK,EAAEF,IAAI,CAACE;AAAd,OAAP;AACD;;AAvBmB,GAAtB,CADS;AALW,CAAD,CAAvB","sourcesContent":["import NextAuth from 'next-auth';\nimport Providers from 'next-auth/providers';\nimport { verifyPassword } from '../../../lib/auth';\nimport { connectToDatabase } from '../../../lib/db';\n\nexport default NextAuth({\n  session: {\n    jwt: true,\n  },\n\n  providers: [\n    Providers.Credentials({\n      async authorize(credentials) {\n        const client = await connectToDatabase();\n\n        const usersCollection = client.db().collection('users');\n        const user = await usersCollection.findOne({\n          email: credentials.email,\n        });\n\n        if (!user) {\n          client.close();\n          throw new Error('No user found!');\n        }\n\n        const isValid = verifyPassword(credentials.password, user.password);\n        \n        if (!isValid) {\n          client.close();\n          throw new Error('Could not log you in!');\n        }\n\n        client.close();\n        return { email: user.email };\n      },\n    }),\n  ],\n});\n"]},"metadata":{},"sourceType":"module"}